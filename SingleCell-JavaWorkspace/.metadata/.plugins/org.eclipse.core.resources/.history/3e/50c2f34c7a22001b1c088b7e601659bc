package single_cell;

import java.util.List;

import org.json.JSONArray;
import org.json.JSONObject;

public class MySpecimen extends MyIndividual {

	public MySpecimen(JSONObject jsonIndividual, MyModel model) {
		super(jsonIndividual, model);
	}

	@Override
	protected String[] getObjectProperties() {
		return MyModel.OBJECT_PROPERTIES;
	}

	@Override
	protected String[] getDataProperties() {
		return MyModel.SPECIMEN_DATA_PROPERTIES;
	}

	@Override
	protected String[] getAnotationProperties() {
		return MyModel.SPR_ANOTATION_PROPERTIES;
	}
	
	@Override
	protected void createIndividual(String id) {
		getModel().createSpecimen(id);
	}

	@Override
	protected Boolean addToModel() {
		getModel().createSpecimen(getId());
		
		JSONObject objectProperties = getJsonIndividual().getJSONObject("ObjectProperties");
		// Add object properties
		for (String propertyName : MyModel.OBJECT_PROPERTIES) {
			try {
				Object propertieValueObject = objectProperties.get(propertyName);
				
				if (propertieValueObject instanceof JSONArray) {
					List<Object> list = objectProperties.getJSONArray(propertyName).toList();
					
					for (Object propertyValue : list) {
						if (propertyValue instanceof Object)
							getModel().addObjectPropertyToIndividual(getId(), propertyName, propertyValue);
					}
				} else if (propertieValueObject instanceof Object){
					getModel().addObjectPropertyToIndividual(getId(), propertyName, propertieValueObject);
				}
			} catch (Exception e) {
				e.printStackTrace();
				System.exit(1);
			}

		}
		
		JSONObject dataProperties = getJsonIndividual().getJSONObject("DataProperties");
		// Add data properties
		for (String propertyName : MyModel.SPECIMEN_DATA_PROPERTIES) {
			try {
				Object propertieValueObject = dataProperties.get(propertyName);
				
				if (propertieValueObject instanceof JSONArray) {
					List<Object> list = dataProperties.getJSONArray(propertyName).toList();
					
					for (Object propertyValue : list) {
						if (propertyValue instanceof Object)
							getModel().addDataPropertyToIndividual(getId(), propertyName, propertyValue);
					}
				} else if (propertieValueObject instanceof Object){
					getModel().addDataPropertyToIndividual(getId(), propertyName, propertieValueObject);
				}
			} catch (Exception e) {
				e.printStackTrace();
				System.exit(1);
			}

		}
		
		JSONObject anotationProperties = getJsonIndividual().getJSONObject("AnotationProperties");
		// Add data properties
		for (String propertyName : MyModel.SPR_ANOTATION_PROPERTIES)) {
			try {
				Object propertieValueObject = anotationProperties.get(propertyName);
				
				if (propertieValueObject instanceof JSONArray) {
					List<Object> list = anotationProperties.getJSONArray(propertyName).toList();
					
					for (Object propertyValue : list) {
						if (propertyValue instanceof Object)
							getModel().addAnotationPropertyToIndividual(getId(), propertyName, propertyValue);
					}
				} else if (propertieValueObject instanceof Object){
					getModel().addAnotationPropertyToIndividual(getId(), propertyName, propertieValueObject);
				}
			} catch (Exception e) {
				e.printStackTrace();
				System.exit(1);
			}

		}
				
		return true;
	}

}
